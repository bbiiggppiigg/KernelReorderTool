
./tmp_00.hsaco:	file format ELF64-amdgpu


Disassembly of section .text:

0000000000001000 _Z9DCTKernelPfS_S_S_jjj:
	s_branch 467                                               // 000000001000: BF8201D3 <BB0_26+0x104>
	v_cndmask_b32_e32 v0, s0, v0, vcc                          // 000000001004: 00000000
	s_load_dwordx4 s[0:3], s[6:7], 0x20                        // 000000001008: C00A0003 00000020
	v_mov_b32_e32 v3, 0                                        // 000000001010: 7E060280
	v_mov_b32_e32 v2, 0                                        // 000000001014: 7E040280
	v_mov_b32_e32 v4, 0                                        // 000000001018: 7E080280
	s_waitcnt lgkmcnt(0)                                       // 00000000101C: BF8CC07F
	v_cmp_ne_u32_e64 s[10:11], s1, 0                           // 000000001020: D0CD000A 00010001
	s_cmp_eq_u32 s1, 0                                         // 000000001028: BF068001
	s_cbranch_scc1 BB0_8                                       // 00000000102C: BF850043
	v_mul_lo_u32 v3, v1, s1                                    // 000000001030: D2850003 00000301
	s_cmp_eq_u32 s2, 0                                         // 000000001038: BF068002
	s_mul_i32 s3, s9, s0                                       // 00000000103C: 92030009
	s_cbranch_scc1 BB0_5                                       // 000000001040: BF85001F
	s_add_i32 s6, s8, s3                                       // 000000001044: 81060308
	s_mul_i32 s6, s1, s6                                       // 000000001048: 92060601
	v_mov_b32_e32 v8, 0                                        // 00000000104C: 7E100280
	v_add_u32_e32 v5, s6, v0                                   // 000000001050: 680A0006
	v_mov_b32_e32 v7, v3                                       // 000000001054: 7E0E0303
	s_mov_b32 s6, s1                                           // 000000001058: BE860001
	v_mov_b32_e32 v4, v8                                       // 00000000105C: 7E080308

0000000000001060 BB0_3:
	v_lshlrev_b64 v[9:10], 2, v[7:8]                           // 000000001060: D28F0009 00020E82
	v_mov_b32_e32 v6, v8                                       // 000000001068: 7E0C0308
	v_lshlrev_b64 v[11:12], 2, v[5:6]                          // 00000000106C: D28F000B 00020A82
	v_mov_b32_e32 v13, s17                                     // 000000001074: 7E1A0211
	v_add_co_u32_e32 v9, vcc, s16, v9                          // 000000001078: 32121210
	v_addc_co_u32_e32 v10, vcc, v13, v10, vcc                  // 00000000107C: 3814150D
	global_load_dword v6, v[9:10], off                         // 000000001080: DC508000 067F0009
	v_mov_b32_e32 v14, s15                                     // 000000001088: 7E1C020F
	v_add_co_u32_e32 v9, vcc, s14, v11                         // 00000000108C: 3212160E
	v_addc_co_u32_e32 v10, vcc, v14, v12, vcc                  // 000000001090: 3814190E
	global_load_dword v9, v[9:10], off                         // 000000001094: DC508000 097F0009
	s_add_i32 s6, s6, -1                                       // 00000000109C: 8106C106
	v_add_u32_e32 v7, 1, v7                                    // 0000000010A0: 680E0E81
	v_add_u32_e32 v5, s0, v5                                   // 0000000010A4: 680A0A00
	s_cmp_eq_u32 s6, 0                                         // 0000000010A8: BF068006
	s_waitcnt vmcnt(0)                                         // 0000000010AC: BF8C0F70
	v_fma_f32 v4, v6, v9, v4                                   // 0000000010B0: D1CB0004 04121306
	s_cbranch_scc0 BB0_3                                       // 0000000010B8: BF84FFE9
	s_branch BB0_8                                             // 0000000010BC: BF82001F

00000000000010c0 BB0_5:
	s_cbranch_execz BB0_8                                      // 0000000010C0: BF88001E
	s_add_i32 s3, s8, s3                                       // 0000000010C4: 81030308
	s_mul_i32 s3, s1, s3                                       // 0000000010C8: 92030301
	v_mov_b32_e32 v8, 0                                        // 0000000010CC: 7E100280
	v_add_u32_e32 v5, s3, v0                                   // 0000000010D0: 680A0003
	v_mov_b32_e32 v7, v3                                       // 0000000010D4: 7E0E0303
	s_mov_b32 s3, s1                                           // 0000000010D8: BE830001
	v_mov_b32_e32 v4, v8                                       // 0000000010DC: 7E080308

00000000000010e0 BB0_7:
	v_lshlrev_b64 v[9:10], 2, v[7:8]                           // 0000000010E0: D28F0009 00020E82
	v_mov_b32_e32 v6, v8                                       // 0000000010E8: 7E0C0308
	v_lshlrev_b64 v[11:12], 2, v[5:6]                          // 0000000010EC: D28F000B 00020A82
	v_mov_b32_e32 v13, s19                                     // 0000000010F4: 7E1A0213
	v_add_co_u32_e32 v9, vcc, s18, v9                          // 0000000010F8: 32121212
	v_addc_co_u32_e32 v10, vcc, v13, v10, vcc                  // 0000000010FC: 3814150D
	global_load_dword v6, v[9:10], off                         // 000000001100: DC508000 067F0009
	v_mov_b32_e32 v14, s15                                     // 000000001108: 7E1C020F
	v_add_co_u32_e32 v9, vcc, s14, v11                         // 00000000110C: 3212160E
	v_addc_co_u32_e32 v10, vcc, v14, v12, vcc                  // 000000001110: 3814190E
	global_load_dword v9, v[9:10], off                         // 000000001114: DC508000 097F0009
	s_add_i32 s3, s3, -1                                       // 00000000111C: 8103C103
	v_add_u32_e32 v7, 1, v7                                    // 000000001120: 680E0E81
	v_add_u32_e32 v5, s0, v5                                   // 000000001124: 680A0A00
	s_cmp_eq_u32 s3, 0                                         // 000000001128: BF068003
	s_waitcnt vmcnt(0)                                         // 00000000112C: BF8C0F70
	v_fma_f32 v4, v6, v9, v4                                   // 000000001130: D1CB0004 04121306
	s_cbranch_scc0 BB0_7                                       // 000000001138: BF84FFE9

000000000000113c BB0_8:
	s_load_dword s6, s[4:5], 0x4                               // 00000000113C: C0020182 00000004
	s_load_dword s3, s[4:5], 0xc                               // 000000001144: C00200C2 0000000C
	v_add_lshl_u32 v5, v3, v0, 2                               // 00000000114C: D1FE0005 020A0103
	s_andn2_b64 vcc, exec, s[10:11]                            // 000000001154: 89EA0A7E
	ds_write_b32 v5, v4                                        // 000000001158: D81A0000 00000405
	s_waitcnt lgkmcnt(0)                                       // 000000001160: BF8CC07F
	s_barrier                                                  // 000000001164: BF8A0000
	s_waitcnt lgkmcnt(0)                                       // 000000001168: BF8CC07F
	s_cbranch_vccnz BB0_26                                     // 00000000116C: BF870137
	s_cmp_eq_u32 s2, 0                                         // 000000001170: BF068002
	s_mov_b32 s2, 0                                            // 000000001174: BE820080
	s_cbranch_scc1 BB0_14                                      // 000000001178: BF85007E
	s_add_i32 s4, s1, -1                                       // 00000000117C: 8104C101
	s_cmp_lt_u32 s4, 7                                         // 000000001180: BF0A8704
	s_cbranch_scc1 BB0_15                                      // 000000001184: BF85007D
	v_mov_b32_e32 v6, 0                                        // 000000001188: 7E0C0280
	s_and_b32 s2, s1, -8                                       // 00000000118C: 8602C801
	s_lshl_b32 s4, s1, 3                                       // 000000001190: 8E048301
	s_lshl_b32 s5, s1, 1                                       // 000000001194: 8E058101
	s_mul_i32 s7, s1, 3                                        // 000000001198: 92078301
	s_lshl_b32 s10, s1, 2                                      // 00000000119C: 8E0A8201
	s_mul_i32 s11, s1, 5                                       // 0000000011A0: 920B8501
	s_mul_i32 s14, s1, 6                                       // 0000000011A4: 920E8601
	s_mul_i32 s15, s1, 7                                       // 0000000011A8: 920F8701
	v_lshlrev_b32_e32 v4, 2, v3                                // 0000000011AC: 24080682
	s_mov_b32 s20, 0                                           // 0000000011B0: BE940080
	v_mov_b32_e32 v5, v0                                       // 0000000011B4: 7E0A0300
	v_mov_b32_e32 v2, v6                                       // 0000000011B8: 7E040306

00000000000011bc BB0_12:
	v_lshlrev_b64 v[7:8], 2, v[5:6]                            // 0000000011BC: D28F0007 00020A82
	v_add_u32_e32 v9, s1, v5                                   // 0000000011C4: 68120A01
	v_mov_b32_e32 v10, v6                                      // 0000000011C8: 7E140306
	v_mov_b32_e32 v19, s19                                     // 0000000011CC: 7E260213
	v_add_co_u32_e32 v7, vcc, s18, v7                          // 0000000011D0: 320E0E12
	v_lshlrev_b64 v[9:10], 2, v[9:10]                          // 0000000011D4: D28F0009 00021282
	v_addc_co_u32_e32 v8, vcc, v19, v8, vcc                    // 0000000011DC: 38101113
	v_add_u32_e32 v11, s5, v5                                  // 0000000011E0: 68160A05
	v_mov_b32_e32 v12, v6                                      // 0000000011E4: 7E180306
	v_mov_b32_e32 v20, s19                                     // 0000000011E8: 7E280213
	v_add_co_u32_e32 v9, vcc, s18, v9                          // 0000000011EC: 32121212
	v_lshlrev_b64 v[11:12], 2, v[11:12]                        // 0000000011F0: D28F000B 00021682
	v_addc_co_u32_e32 v10, vcc, v20, v10, vcc                  // 0000000011F8: 38141514
	v_add_u32_e32 v13, s7, v5                                  // 0000000011FC: 681A0A07
	v_mov_b32_e32 v14, v6                                      // 000000001200: 7E1C0306
	v_mov_b32_e32 v21, s19                                     // 000000001204: 7E2A0213
	v_add_co_u32_e32 v11, vcc, s18, v11                        // 000000001208: 32161612
	v_lshlrev_b64 v[13:14], 2, v[13:14]                        // 00000000120C: D28F000D 00021A82
	v_addc_co_u32_e32 v12, vcc, v21, v12, vcc                  // 000000001214: 38181915
	v_add_u32_e32 v15, s10, v5                                 // 000000001218: 681E0A0A
	v_mov_b32_e32 v16, v6                                      // 00000000121C: 7E200306
	v_mov_b32_e32 v22, s19                                     // 000000001220: 7E2C0213
	v_add_co_u32_e32 v13, vcc, s18, v13                        // 000000001224: 321A1A12
	v_lshlrev_b64 v[15:16], 2, v[15:16]                        // 000000001228: D28F000F 00021E82
	v_addc_co_u32_e32 v14, vcc, v22, v14, vcc                  // 000000001230: 381C1D16
	v_add_u32_e32 v17, s11, v5                                 // 000000001234: 68220A0B
	v_mov_b32_e32 v18, v6                                      // 000000001238: 7E240306
	v_mov_b32_e32 v23, s19                                     // 00000000123C: 7E2E0213
	v_add_co_u32_e32 v15, vcc, s18, v15                        // 000000001240: 321E1E12
	v_lshlrev_b64 v[17:18], 2, v[17:18]                        // 000000001244: D28F0011 00022282
	v_addc_co_u32_e32 v16, vcc, v23, v16, vcc                  // 00000000124C: 38202117
	v_add_u32_e32 v19, s14, v5                                 // 000000001250: 68260A0E
	v_mov_b32_e32 v20, v6                                      // 000000001254: 7E280306
	v_mov_b32_e32 v24, s19                                     // 000000001258: 7E300213
	v_add_co_u32_e32 v17, vcc, s18, v17                        // 00000000125C: 32222212
	v_lshlrev_b64 v[19:20], 2, v[19:20]                        // 000000001260: D28F0013 00022682
	v_addc_co_u32_e32 v18, vcc, v24, v18, vcc                  // 000000001268: 38242518
	v_add_u32_e32 v21, s15, v5                                 // 00000000126C: 682A0A0F
	v_mov_b32_e32 v22, v6                                      // 000000001270: 7E2C0306
	v_mov_b32_e32 v25, s19                                     // 000000001274: 7E320213
	v_add_co_u32_e32 v19, vcc, s18, v19                        // 000000001278: 32262612
	v_lshlrev_b64 v[21:22], 2, v[21:22]                        // 00000000127C: D28F0015 00022A82
	v_addc_co_u32_e32 v20, vcc, v25, v20, vcc                  // 000000001284: 38282919
	v_add_co_u32_e32 v21, vcc, s18, v21                        // 000000001288: 322A2A12
	v_addc_co_u32_e32 v22, vcc, v23, v22, vcc                  // 00000000128C: 382C2D17
	global_load_dword v23, v[7:8], off                         // 000000001290: DC508000 177F0007
	global_load_dword v24, v[9:10], off                        // 000000001298: DC508000 187F0009
	global_load_dword v25, v[11:12], off                       // 0000000012A0: DC508000 197F000B
	global_load_dword v26, v[13:14], off                       // 0000000012A8: DC508000 1A7F000D
	global_load_dword v27, v[15:16], off                       // 0000000012B0: DC508000 1B7F000F
	global_load_dword v28, v[17:18], off                       // 0000000012B8: DC508000 1C7F0011
	global_load_dword v29, v[19:20], off                       // 0000000012C0: DC508000 1D7F0013
	global_load_dword v30, v[21:22], off                       // 0000000012C8: DC508000 1E7F0015
	ds_read2_b32 v[7:8], v4 offset1:1                          // 0000000012D0: D86E0100 07000004
	ds_read2_b32 v[9:10], v4 offset0:2 offset1:3               // 0000000012D8: D86E0302 09000004
	ds_read2_b32 v[11:12], v4 offset0:4 offset1:5              // 0000000012E0: D86E0504 0B000004
	ds_read2_b32 v[13:14], v4 offset0:6 offset1:7              // 0000000012E8: D86E0706 0D000004
	s_add_i32 s20, s20, 8                                      // 0000000012F0: 81148814
	v_add_u32_e32 v5, s4, v5                                   // 0000000012F4: 680A0A04
	v_add_u32_e32 v4, 32, v4                                   // 0000000012F8: 680808A0
	s_cmp_eq_u32 s2, s20                                       // 0000000012FC: BF061402
	s_waitcnt vmcnt(7) lgkmcnt(3)                              // 000000001300: BF8C0377
	v_fma_f32 v2, v7, v23, v2                                  // 000000001304: D1CB0002 040A2F07
	s_waitcnt vmcnt(6)                                         // 00000000130C: BF8C0F76
	v_fma_f32 v2, v8, v24, v2                                  // 000000001310: D1CB0002 040A3108
	s_waitcnt vmcnt(5) lgkmcnt(2)                              // 000000001318: BF8C0275
	v_fma_f32 v2, v9, v25, v2                                  // 00000000131C: D1CB0002 040A3309
	s_waitcnt vmcnt(4)                                         // 000000001324: BF8C0F74
	v_fma_f32 v2, v10, v26, v2                                 // 000000001328: D1CB0002 040A350A
	s_waitcnt vmcnt(3) lgkmcnt(1)                              // 000000001330: BF8C0173
	v_fma_f32 v2, v11, v27, v2                                 // 000000001334: D1CB0002 040A370B
	s_waitcnt vmcnt(2)                                         // 00000000133C: BF8C0F72
	v_fma_f32 v2, v12, v28, v2                                 // 000000001340: D1CB0002 040A390C
	s_waitcnt vmcnt(1) lgkmcnt(0)                              // 000000001348: BF8C0071
	v_fma_f32 v2, v13, v29, v2                                 // 00000000134C: D1CB0002 040A3B0D
	s_waitcnt vmcnt(0)                                         // 000000001354: BF8C0F70
	v_fma_f32 v2, v14, v30, v2                                 // 000000001358: D1CB0002 040A3D0E
	s_cbranch_scc0 BB0_12                                      // 000000001360: BF84FF96
	s_and_b32 s4, s1, 7                                        // 000000001364: 86048701
	s_cmp_eq_u32 s4, 0                                         // 000000001368: BF068004
	s_cbranch_scc0 BB0_16                                      // 00000000136C: BF840007
	s_branch BB0_18                                            // 000000001370: BF82001C

0000000000001374 BB0_14:
	s_cbranch_execnz BB0_19                                    // 000000001374: BF89001C
	s_branch BB0_26                                            // 000000001378: BF8200B4

000000000000137c BB0_15:
	v_mov_b32_e32 v2, 0                                        // 00000000137C: 7E040280
	s_and_b32 s4, s1, 7                                        // 000000001380: 86048701
	s_cmp_eq_u32 s4, 0                                         // 000000001384: BF068004
	s_cbranch_scc1 BB0_18                                      // 000000001388: BF850016

000000000000138c BB0_16:
	s_mul_i32 s5, s2, s1                                       // 00000000138C: 92050102
	v_add_u32_e32 v4, s5, v0                                   // 000000001390: 68080005
	v_add_lshl_u32 v6, v3, s2, 2                               // 000000001394: D1FE0006 02080503
	v_mov_b32_e32 v5, 0                                        // 00000000139C: 7E0A0280

00000000000013a0 BB0_17:
	v_lshlrev_b64 v[7:8], 2, v[4:5]                            // 0000000013A0: D28F0007 00020882
	v_mov_b32_e32 v9, s19                                      // 0000000013A8: 7E120213
	v_add_co_u32_e32 v7, vcc, s18, v7                          // 0000000013AC: 320E0E12
	v_addc_co_u32_e32 v8, vcc, v9, v8, vcc                     // 0000000013B0: 38101109
	global_load_dword v7, v[7:8], off                          // 0000000013B4: DC508000 077F0007
	ds_read_b32 v8, v6                                         // 0000000013BC: D86C0000 08000006
	s_add_i32 s4, s4, -1                                       // 0000000013C4: 8104C104
	v_add_u32_e32 v4, s1, v4                                   // 0000000013C8: 68080801
	v_add_u32_e32 v6, 4, v6                                    // 0000000013CC: 680C0C84
	s_cmp_lg_u32 s4, 0                                         // 0000000013D0: BF078004
	s_waitcnt vmcnt(0) lgkmcnt(0)                              // 0000000013D4: BF8C0070
	v_fma_f32 v2, v8, v7, v2                                   // 0000000013D8: D1CB0002 040A0F08
	s_cbranch_scc1 BB0_17                                      // 0000000013E0: BF85FFEF

00000000000013e4 BB0_18:
	s_branch BB0_26                                            // 0000000013E4: BF820099

00000000000013e8 BB0_19:
	s_add_i32 s2, s1, -1                                       // 0000000013E8: 8102C101
	s_cmp_lt_u32 s2, 7                                         // 0000000013EC: BF0A8702
	s_cbranch_scc1 BB0_23                                      // 0000000013F0: BF85007B
	v_mov_b32_e32 v6, 0                                        // 0000000013F4: 7E0C0280
	s_branch 230                                               // 0000000013F8: BF8200E6 <BB0_26+0x148>
	s_lshl_b32 s4, s1, 3                                       // 0000000013FC: 8E048301
	s_lshl_b32 s5, s1, 1                                       // 000000001400: 8E058101
	s_mul_i32 s7, s1, 3                                        // 000000001404: 92078301
	s_lshl_b32 s10, s1, 2                                      // 000000001408: 8E0A8201
	s_mul_i32 s11, s1, 5                                       // 00000000140C: 920B8501
	s_mul_i32 s14, s1, 6                                       // 000000001410: 920E8601
	s_mul_i32 s15, s1, 7                                       // 000000001414: 920F8701
	v_lshlrev_b32_e32 v4, 2, v3                                // 000000001418: 24080682
	s_mov_b32 s18, 0                                           // 00000000141C: BE920080
	v_mov_b32_e32 v5, v0                                       // 000000001420: 7E0A0300
	v_mov_b32_e32 v2, v6                                       // 000000001424: 7E040306

0000000000001428 BB0_21:
	v_lshlrev_b64 v[7:8], 2, v[5:6]                            // 000000001428: D28F0007 00020A82
	v_add_u32_e32 v9, s1, v5                                   // 000000001430: 68120A01
	v_mov_b32_e32 v10, v6                                      // 000000001434: 7E140306
	v_mov_b32_e32 v19, s17                                     // 000000001438: 7E260211
	v_add_co_u32_e32 v7, vcc, s16, v7                          // 00000000143C: 320E0E10
	v_lshlrev_b64 v[9:10], 2, v[9:10]                          // 000000001440: D28F0009 00021282
	v_addc_co_u32_e32 v8, vcc, v19, v8, vcc                    // 000000001448: 38101113
	v_add_u32_e32 v11, s5, v5                                  // 00000000144C: 68160A05
	v_mov_b32_e32 v12, v6                                      // 000000001450: 7E180306
	v_mov_b32_e32 v20, s17                                     // 000000001454: 7E280211
	v_add_co_u32_e32 v9, vcc, s16, v9                          // 000000001458: 32121210
	v_lshlrev_b64 v[11:12], 2, v[11:12]                        // 00000000145C: D28F000B 00021682
	v_addc_co_u32_e32 v10, vcc, v20, v10, vcc                  // 000000001464: 38141514
	v_add_u32_e32 v13, s7, v5                                  // 000000001468: 681A0A07
	v_mov_b32_e32 v14, v6                                      // 00000000146C: 7E1C0306
	v_mov_b32_e32 v21, s17                                     // 000000001470: 7E2A0211
	v_add_co_u32_e32 v11, vcc, s16, v11                        // 000000001474: 32161610
	v_lshlrev_b64 v[13:14], 2, v[13:14]                        // 000000001478: D28F000D 00021A82
	v_addc_co_u32_e32 v12, vcc, v21, v12, vcc                  // 000000001480: 38181915
	v_add_u32_e32 v15, s10, v5                                 // 000000001484: 681E0A0A
	v_mov_b32_e32 v16, v6                                      // 000000001488: 7E200306
	v_mov_b32_e32 v22, s17                                     // 00000000148C: 7E2C0211
	v_add_co_u32_e32 v13, vcc, s16, v13                        // 000000001490: 321A1A10
	v_lshlrev_b64 v[15:16], 2, v[15:16]                        // 000000001494: D28F000F 00021E82
	v_addc_co_u32_e32 v14, vcc, v22, v14, vcc                  // 00000000149C: 381C1D16
	v_add_u32_e32 v17, s11, v5                                 // 0000000014A0: 68220A0B
	v_mov_b32_e32 v18, v6                                      // 0000000014A4: 7E240306
	v_mov_b32_e32 v23, s17                                     // 0000000014A8: 7E2E0211
	v_add_co_u32_e32 v15, vcc, s16, v15                        // 0000000014AC: 321E1E10
	v_lshlrev_b64 v[17:18], 2, v[17:18]                        // 0000000014B0: D28F0011 00022282
	v_addc_co_u32_e32 v16, vcc, v23, v16, vcc                  // 0000000014B8: 38202117
	v_add_u32_e32 v19, s14, v5                                 // 0000000014BC: 68260A0E
	v_mov_b32_e32 v20, v6                                      // 0000000014C0: 7E280306
	v_mov_b32_e32 v24, s17                                     // 0000000014C4: 7E300211
	v_add_co_u32_e32 v17, vcc, s16, v17                        // 0000000014C8: 32222210
	v_lshlrev_b64 v[19:20], 2, v[19:20]                        // 0000000014CC: D28F0013 00022682
	v_addc_co_u32_e32 v18, vcc, v24, v18, vcc                  // 0000000014D4: 38242518
	v_add_u32_e32 v21, s15, v5                                 // 0000000014D8: 682A0A0F
	v_mov_b32_e32 v22, v6                                      // 0000000014DC: 7E2C0306
	v_mov_b32_e32 v25, s17                                     // 0000000014E0: 7E320211
	v_add_co_u32_e32 v19, vcc, s16, v19                        // 0000000014E4: 32262610
	v_lshlrev_b64 v[21:22], 2, v[21:22]                        // 0000000014E8: D28F0015 00022A82
	v_addc_co_u32_e32 v20, vcc, v25, v20, vcc                  // 0000000014F0: 38282919
	v_add_co_u32_e32 v21, vcc, s16, v21                        // 0000000014F4: 322A2A10
	v_addc_co_u32_e32 v22, vcc, v23, v22, vcc                  // 0000000014F8: 382C2D17
	global_load_dword v23, v[7:8], off                         // 0000000014FC: DC508000 177F0007
	global_load_dword v24, v[9:10], off                        // 000000001504: DC508000 187F0009
	global_load_dword v25, v[11:12], off                       // 00000000150C: DC508000 197F000B
	global_load_dword v26, v[13:14], off                       // 000000001514: DC508000 1A7F000D
	global_load_dword v27, v[15:16], off                       // 00000000151C: DC508000 1B7F000F
	global_load_dword v28, v[17:18], off                       // 000000001524: DC508000 1C7F0011
	global_load_dword v29, v[19:20], off                       // 00000000152C: DC508000 1D7F0013
	global_load_dword v30, v[21:22], off                       // 000000001534: DC508000 1E7F0015
	ds_read2_b32 v[7:8], v4 offset1:1                          // 00000000153C: D86E0100 07000004
	ds_read2_b32 v[9:10], v4 offset0:2 offset1:3               // 000000001544: D86E0302 09000004
	ds_read2_b32 v[11:12], v4 offset0:4 offset1:5              // 00000000154C: D86E0504 0B000004
	ds_read2_b32 v[13:14], v4 offset0:6 offset1:7              // 000000001554: D86E0706 0D000004
	s_add_i32 s18, s18, 8                                      // 00000000155C: 81128812
	v_add_u32_e32 v5, s4, v5                                   // 000000001560: 680A0A04
	v_add_u32_e32 v4, 32, v4                                   // 000000001564: 680808A0
	s_cmp_eq_u32 s2, s18                                       // 000000001568: BF061202
	s_waitcnt vmcnt(7) lgkmcnt(3)                              // 00000000156C: BF8C0377
	v_fma_f32 v2, v7, v23, v2                                  // 000000001570: D1CB0002 040A2F07
	s_waitcnt vmcnt(6)                                         // 000000001578: BF8C0F76
	v_fma_f32 v2, v8, v24, v2                                  // 00000000157C: D1CB0002 040A3108
	s_waitcnt vmcnt(5) lgkmcnt(2)                              // 000000001584: BF8C0275
	v_fma_f32 v2, v9, v25, v2                                  // 000000001588: D1CB0002 040A3309
	s_waitcnt vmcnt(4)                                         // 000000001590: BF8C0F74
	v_fma_f32 v2, v10, v26, v2                                 // 000000001594: D1CB0002 040A350A
	s_waitcnt vmcnt(3) lgkmcnt(1)                              // 00000000159C: BF8C0173
	v_fma_f32 v2, v11, v27, v2                                 // 0000000015A0: D1CB0002 040A370B
	s_waitcnt vmcnt(2)                                         // 0000000015A8: BF8C0F72
	v_fma_f32 v2, v12, v28, v2                                 // 0000000015AC: D1CB0002 040A390C
	s_waitcnt vmcnt(1) lgkmcnt(0)                              // 0000000015B4: BF8C0071
	v_fma_f32 v2, v13, v29, v2                                 // 0000000015B8: D1CB0002 040A3B0D
	s_waitcnt vmcnt(0)                                         // 0000000015C0: BF8C0F70
	v_fma_f32 v2, v14, v30, v2                                 // 0000000015C4: D1CB0002 040A3D0E
	s_cbranch_scc0 BB0_21                                      // 0000000015CC: BF84FF96
	s_and_b32 s4, s1, 7                                        // 0000000015D0: 86048701
	s_cmp_eq_u32 s4, 0                                         // 0000000015D4: BF068004
	s_cbranch_scc0 BB0_24                                      // 0000000015D8: BF840006
	s_branch BB0_26                                            // 0000000015DC: BF82001B

00000000000015e0 BB0_23:
	s_mov_b32 s2, 0                                            // 0000000015E0: BE820080
	v_mov_b32_e32 v2, 0                                        // 0000000015E4: 7E040280
	s_and_b32 s4, s1, 7                                        // 0000000015E8: 86048701
	s_cmp_eq_u32 s4, 0                                         // 0000000015EC: BF068004
	s_cbranch_scc1 BB0_26                                      // 0000000015F0: BF850016

00000000000015f4 BB0_24:
	s_mul_i32 s5, s2, s1                                       // 0000000015F4: 92050102
	v_add_u32_e32 v4, s5, v0                                   // 0000000015F8: 68080005
	v_add_lshl_u32 v3, v3, s2, 2                               // 0000000015FC: D1FE0003 02080503
	v_mov_b32_e32 v5, 0                                        // 000000001604: 7E0A0280

0000000000001608 BB0_25:
	v_lshlrev_b64 v[6:7], 2, v[4:5]                            // 000000001608: D28F0006 00020882
	v_mov_b32_e32 v8, s17                                      // 000000001610: 7E100211
	v_add_co_u32_e32 v6, vcc, s16, v6                          // 000000001614: 320C0C10
	v_addc_co_u32_e32 v7, vcc, v8, v7, vcc                     // 000000001618: 380E0F08
	global_load_dword v6, v[6:7], off                          // 00000000161C: DC508000 067F0006
	ds_read_b32 v7, v3                                         // 000000001624: D86C0000 07000003
	s_add_i32 s4, s4, -1                                       // 00000000162C: 8104C104
	v_add_u32_e32 v4, s1, v4                                   // 000000001630: 68080801
	v_add_u32_e32 v3, 4, v3                                    // 000000001634: 68060684
	s_cmp_eq_u32 s4, 0                                         // 000000001638: BF068004
	s_waitcnt vmcnt(0) lgkmcnt(0)                              // 00000000163C: BF8C0070
	v_fma_f32 v2, v7, v6, v2                                   // 000000001640: D1CB0002 040A0D07
	s_cbranch_scc0 BB0_25                                      // 000000001648: BF84FFEF

000000000000164c BB0_26:
	s_and_b32 s2, s6, 0xffff                                   // 00000000164C: 8602FF06 0000FFFF
	v_cvt_f32_u32_e32 v3, s2                                   // 000000001654: 7E060C02
	s_sub_i32 s1, 0, s2                                        // 000000001658: 81810280
	v_mov_b32_e32 v4, 0                                        // 00000000165C: 7E080280
	v_mov_b32_e32 v7, s13                                      // 000000001660: 7E0E020D
	v_rcp_iflag_f32_e32 v3, v3                                 // 000000001664: 7E064703
	v_mul_f32_e32 v3, 0x4f7ffffe, v3                           // 000000001668: 0A0606FF 4F7FFFFE
	v_cvt_u32_f32_e32 v5, v3                                   // 000000001670: 7E0A0F03
	v_mul_lo_u32 v3, s1, v5                                    // 000000001674: D2850003 00020A01
	s_lshr_b32 s1, s6, 16                                      // 00000000167C: 8F019006
	s_mul_i32 s1, s9, s1                                       // 000000001680: 92010109
	v_add_u32_e32 v1, s1, v1                                   // 000000001684: 68020201
	v_mul_hi_u32 v6, v5, v3                                    // 000000001688: D2860006 00020705
	v_mul_lo_u32 v9, v1, s0                                    // 000000001690: D2850009 00000101
	v_mov_b32_e32 v3, s8                                       // 000000001698: 7E060208
	s_mul_i32 s8, s8, s2                                       // 00000000169C: 92080208
	v_add_u32_e32 v5, v5, v6                                   // 0000000016A0: 680A0D05
	v_mul_hi_u32 v5, s3, v5                                    // 0000000016A4: D2860005 00020A03
	v_add3_u32 v0, s8, v0, v9                                  // 0000000016AC: D1FF0000 04260008
	v_mov_b32_e32 v6, s13                                      // 0000000016B4: 7E0C020D
	v_mul_lo_u32 v8, v5, s2                                    // 0000000016B8: D2850008 00000505
	v_add_u32_e32 v1, 1, v5                                    // 0000000016C0: 68020A81
	v_sub_u32_e32 v8, s3, v8                                   // 0000000016C4: 6A101003
	v_cmp_le_u32_e32 vcc, s2, v8                               // 0000000016C8: 7D961002
	v_cndmask_b32_e32 v1, v5, v1, vcc                          // 0000000016CC: 00020305
	v_subrev_u32_e32 v5, s2, v8                                // 0000000016D0: 6C0A1002
	v_cndmask_b32_e32 v5, v8, v5, vcc                          // 0000000016D4: 000A0B08
	v_add_u32_e32 v8, 1, v1                                    // 0000000016D8: 68100281
	v_cmp_le_u32_e32 vcc, s2, v5                               // 0000000016DC: 7D960A02
	v_cndmask_b32_e32 v5, v1, v8, vcc                          // 0000000016E0: 000A1101
	v_mul_lo_u32 v8, v5, s2                                    // 0000000016E4: D2850008 00000505
	v_mov_b32_e32 v1, v4                                       // 0000000016EC: 7E020304
	v_lshlrev_b64 v[0:1], 2, v[0:1]                            // 0000000016F0: D28F0000 00020082
	v_cmp_gt_u32_e32 vcc, s3, v8                               // 0000000016F8: 7D981003
	v_addc_co_u32_e32 v5, vcc, 0, v5, vcc                      // 0000000016FC: 380A0A80
	v_mad_u64_u32 v[3:4], s[0:1], v5, s9, v[3:4]               // 000000001700: D1E80003 040C1305
	v_add_co_u32_e32 v0, vcc, s12, v0                          // 000000001708: 3200000C
	v_addc_co_u32_e32 v1, vcc, v7, v1, vcc                     // 00000000170C: 38020307
	global_store_dword v[0:1], v2, off                         // 000000001710: DC708000 007F0200
	v_lshlrev_b64 v[0:1], 2, v[3:4]                            // 000000001718: D28F0000 00020682
	v_mov_b32_e32 v2, 1.0                                      // 000000001720: 7E0402F2
	v_add_co_u32_e32 v0, vcc, s12, v0                          // 000000001724: 3200000C
	v_addc_co_u32_e32 v1, vcc, v1, v6, vcc                     // 000000001728: 38020D01
	v_add_co_u32_e32 v0, vcc, 0x4000, v0                       // 00000000172C: 320000FF 00004000
	v_addc_co_u32_e32 v1, vcc, 0, v1, vcc                      // 000000001734: 38020280
	global_store_dword v[0:1], v2, off                         // 000000001738: DC708000 007F0200
	s_waitcnt vmcnt(0) lgkmcnt(0)                              // 000000001740: BF8C0070
	s_barrier                                                  // 000000001744: BF8A0000
	s_branch 43                                                // 000000001748: BF82002B <BB0_26+0x1ac>
	s_endpgm                                                   // 00000000174C: BF810000
	s_load_dwordx8 s[12:19], s[6:7], 0x0                       // 000000001750: C00E0303 00000000
	s_load_dwordx4 s[0:3], s[6:7], 0x20                        // 000000001758: C00A0003 00000020
	v_mov_b32_e32 v3, 0                                        // 000000001760: 7E060280
	v_mov_b32_e32 v2, 0                                        // 000000001764: 7E040280
	v_mov_b32_e32 v4, 0                                        // 000000001768: 7E080280
	s_mov_b64 s[32:33], src_scc                                // 00000000176C: BEA001FD
	s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)                    // 000000001770: BF8C0000
	s_mov_b64 s[26:27], s[12:13]                               // 000000001774: BE9A010C
	s_mov_b64 s[34:35], 1                                      // 000000001778: BEA20181
	s_load_dword s36, s[4:5], 0xc                              // 00000000177C: C0020902 0000000C
	s_mov_b32 s38, s8                                          // 000000001784: BEA60008
	s_mov_b32 s39, s9                                          // 000000001788: BEA70009
	s_and_b32 s32, s32, s32                                    // 00000000178C: 86202020
	s_branch 65058                                             // 000000001790: BF82FE22 <_Z9DCTKernelPfS_S_S_jjj+0x1c>
	s_mov_b64 s[32:33], src_scc                                // 000000001794: BEA001FD
	s_memtime s[28:29]                                         // 000000001798: C0900700 00000000
	s_and_b32 s32, s32, s32                                    // 0000000017A0: 86202020
	s_and_b32 s2, s1, -8                                       // 0000000017A4: 8602C801
	s_lshl_b32 s4, s1, 3                                       // 0000000017A8: 8E048301
	s_lshl_b32 s5, s1, 1                                       // 0000000017AC: 8E058101
	s_mul_i32 s7, s1, 3                                        // 0000000017B0: 92078301
	s_lshl_b32 s10, s1, 2                                      // 0000000017B4: 8E0A8201
	s_mul_i32 s11, s1, 5                                       // 0000000017B8: 920B8501
	s_mul_i32 s14, s1, 6                                       // 0000000017BC: 920E8601
	s_mul_i32 s15, s1, 7                                       // 0000000017C0: 920F8701
	v_lshlrev_b32_e32 v4, 2, v3                                // 0000000017C4: 24080682
	s_mov_b32 s18, 0                                           // 0000000017C8: BE920080
	v_mov_b32_e32 v5, v0                                       // 0000000017CC: 7E0A0300
	s_mov_b64 s[32:33], src_scc                                // 0000000017D0: BEA001FD
	s_memtime s[30:31]                                         // 0000000017D4: C0900780 00000000
	s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)                    // 0000000017DC: BF8C0000
	s_sub_u32 s28, s30, s28                                    // 0000000017E0: 809C1C1E
	s_subb_u32 s29, s31, s29                                   // 0000000017E4: 829D1D1F
	s_add_u32 s34, s34, s28                                    // 0000000017E8: 80221C22
	s_addc_u32 s35, s35, s29                                   // 0000000017EC: 82231D23
	s_and_b32 s32, s32, s32                                    // 0000000017F0: 86202020
	s_branch 65291                                             // 0000000017F4: BF82FF0B <BB0_19+0x3c>
	s_waitcnt lgkmcnt(0)                                       // 0000000017F8: BF8CC07F
	s_mov_b64 s[32:33], src_scc                                // 0000000017FC: BEA001FD
	s_ashr_i32 s36, s36, 3                                     // 000000001800: 90248324
	s_mul_hi_u32 s37, s39, s36                                 // 000000001804: 96252427
	s_mul_i32 s36, s39, s36                                    // 000000001808: 92242427
	s_add_u32 s36, s38, s36                                    // 00000000180C: 80242426
	s_addc_u32 s37, 0, s37                                     // 000000001810: 82252580
	s_lshl_b64 s[36:37], s[36:37], 3                           // 000000001814: 8EA48324
	s_add_u32 s26, s36, s26                                    // 000000001818: 801A1A24
	s_addc_u32 s27, s37, s27                                   // 00000000181C: 821B1B25
	s_add_u32 s26, 0x3ff8, s26                                 // 000000001820: 801A1AFF 00003FF8
	s_addc_u32 s27, 0, s27                                     // 000000001828: 821B1B80
	s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)                    // 00000000182C: BF8C0000
	s_add_u32 s26, 8, s26                                      // 000000001830: 801A1A88
	s_addc_u32 s27, 0, s27                                     // 000000001834: 821B1B80
	v_mov_b32_e32 v6, s26                                      // 000000001838: 7E0C021A
	v_mov_b32_e32 v7, s27                                      // 00000000183C: 7E0E021B
	v_mov_b32_e32 v8, s34                                      // 000000001840: 7E100222
	v_mov_b32_e32 v9, s35                                      // 000000001844: 7E120223
	flat_store_dwordx2 v[6:7], v[8:9]                          // 000000001848: DC740000 00000806
	s_and_b32 s32, s32, s32                                    // 000000001850: 86202020
	s_branch 65469                                             // 000000001854: BF82FFBD <BB0_26+0x100>
		...
