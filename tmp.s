
./tmp_00.hsaco:	file format elf64-amdgpu


Disassembly of section .text:

0000000000001000 <_Z9DCTKernelPfS_S_S_jjj$local>:
	s_branch 403                                               // 000000001000: BF820193 <BB0_26+0x58>
	v_cndmask_b32_e32 v0, s0, v0, vcc                          // 000000001004: 00000000
	s_load_dwordx4 s[0:3], s[6:7], 0x20                        // 000000001008: C00A0003 00000020
	v_mov_b32_e32 v3, 0                                        // 000000001010: 7E060280
	v_mov_b32_e32 v2, 0                                        // 000000001014: 7E040280
	v_mov_b32_e32 v4, 0                                        // 000000001018: 7E080280
	s_waitcnt lgkmcnt(0)                                       // 00000000101C: BF8C007F
	v_cmp_ne_u32_e64 s[6:7], s1, 0                             // 000000001020: D0CD0006 00010001
	s_cmp_eq_u32 s1, 0                                         // 000000001028: BF068001
	s_cbranch_scc1 BB0_8                                       // 00000000102C: BF850041
	v_mul_lo_u32 v3, v1, s1                                    // 000000001030: D2850003 00000301
	s_cmp_eq_u32 s2, 0                                         // 000000001038: BF068002
	s_mul_i32 s3, s9, s0                                       // 00000000103C: 92030009
	s_cbranch_scc1 BB0_5                                       // 000000001040: BF85001E
	s_add_i32 s10, s8, s3                                      // 000000001044: 810A0308
	s_mul_i32 s10, s1, s10                                     // 000000001048: 920A0A01
	v_mov_b32_e32 v8, 0                                        // 00000000104C: 7E100280
	v_add_u32_e32 v5, vcc, s10, v0                             // 000000001050: 320A000A
	v_mov_b32_e32 v7, v3                                       // 000000001054: 7E0E0303
	s_mov_b32 s10, s1                                          // 000000001058: BE8A0001
	v_mov_b32_e32 v4, v8                                       // 00000000105C: 7E080308

0000000000001060 <BB0_3>:
	v_lshlrev_b64 v[9:10], 2, v[7:8]                           // 000000001060: D28F0009 00020E82
	v_mov_b32_e32 v6, v8                                       // 000000001068: 7E0C0308
	v_mov_b32_e32 v13, s17                                     // 00000000106C: 7E1A0211
	v_add_u32_e32 v9, vcc, s16, v9                             // 000000001070: 32121210
	v_lshlrev_b64 v[11:12], 2, v[5:6]                          // 000000001074: D28F000B 00020A82
	v_addc_u32_e32 v10, vcc, v13, v10, vcc                     // 00000000107C: 3814150D
	flat_load_dword v6, v[9:10]                                // 000000001080: DC500000 06000009
	v_mov_b32_e32 v14, s15                                     // 000000001088: 7E1C020F
	v_add_u32_e32 v9, vcc, s14, v11                            // 00000000108C: 3212160E
	v_addc_u32_e32 v10, vcc, v14, v12, vcc                     // 000000001090: 3814190E
	flat_load_dword v9, v[9:10]                                // 000000001094: DC500000 09000009
	s_add_i32 s10, s10, -1                                     // 00000000109C: 810AC10A
	v_add_u32_e32 v7, vcc, 1, v7                               // 0000000010A0: 320E0E81
	v_add_u32_e32 v5, vcc, s0, v5                              // 0000000010A4: 320A0A00
	s_cmp_eq_u32 s10, 0                                        // 0000000010A8: BF06800A
	s_waitcnt vmcnt(0) lgkmcnt(0)                              // 0000000010AC: BF8C0070
	v_mac_f32_e32 v4, v6, v9                                   // 0000000010B0: 2C081306
	s_cbranch_scc0 BB0_3                                       // 0000000010B4: BF84FFEA
	s_branch BB0_8                                             // 0000000010B8: BF82001E

00000000000010bc <BB0_5>:
	s_cbranch_execz BB0_8                                      // 0000000010BC: BF88001D
	s_add_i32 s3, s8, s3                                       // 0000000010C0: 81030308
	s_mul_i32 s3, s1, s3                                       // 0000000010C4: 92030301
	v_mov_b32_e32 v8, 0                                        // 0000000010C8: 7E100280
	v_add_u32_e32 v5, vcc, s3, v0                              // 0000000010CC: 320A0003
	v_mov_b32_e32 v7, v3                                       // 0000000010D0: 7E0E0303
	s_mov_b32 s3, s1                                           // 0000000010D4: BE830001
	v_mov_b32_e32 v4, v8                                       // 0000000010D8: 7E080308

00000000000010dc <BB0_7>:
	v_lshlrev_b64 v[9:10], 2, v[7:8]                           // 0000000010DC: D28F0009 00020E82
	v_mov_b32_e32 v6, v8                                       // 0000000010E4: 7E0C0308
	v_mov_b32_e32 v13, s19                                     // 0000000010E8: 7E1A0213
	v_add_u32_e32 v9, vcc, s18, v9                             // 0000000010EC: 32121212
	v_lshlrev_b64 v[11:12], 2, v[5:6]                          // 0000000010F0: D28F000B 00020A82
	v_addc_u32_e32 v10, vcc, v13, v10, vcc                     // 0000000010F8: 3814150D
	flat_load_dword v6, v[9:10]                                // 0000000010FC: DC500000 06000009
	v_mov_b32_e32 v14, s15                                     // 000000001104: 7E1C020F
	v_add_u32_e32 v9, vcc, s14, v11                            // 000000001108: 3212160E
	v_addc_u32_e32 v10, vcc, v14, v12, vcc                     // 00000000110C: 3814190E
	flat_load_dword v9, v[9:10]                                // 000000001110: DC500000 09000009
	s_add_i32 s3, s3, -1                                       // 000000001118: 8103C103
	v_add_u32_e32 v7, vcc, 1, v7                               // 00000000111C: 320E0E81
	v_add_u32_e32 v5, vcc, s0, v5                              // 000000001120: 320A0A00
	s_cmp_eq_u32 s3, 0                                         // 000000001124: BF068003
	s_waitcnt vmcnt(0) lgkmcnt(0)                              // 000000001128: BF8C0070
	v_mac_f32_e32 v4, v6, v9                                   // 00000000112C: 2C081306
	s_cbranch_scc0 BB0_7                                       // 000000001130: BF84FFEA

0000000000001134 <BB0_8>:
	s_load_dword s3, s[4:5], 0x4                               // 000000001134: C00200C2 00000004
	v_add_u32_e32 v5, vcc, v3, v0                              // 00000000113C: 320A0103
	s_andn2_b64 vcc, exec, s[6:7]                              // 000000001140: 89EA067E
	v_lshlrev_b32_e32 v5, 2, v5                                // 000000001144: 240A0A82
	s_mov_b32 m0, -1                                           // 000000001148: BEFC00C1
	ds_write_b32 v5, v4                                        // 00000000114C: D81A0000 00000405
	s_waitcnt lgkmcnt(0)                                       // 000000001154: BF8C007F
	s_barrier                                                  // 000000001158: BF8A0000
	s_waitcnt lgkmcnt(0)                                       // 00000000115C: BF8C007F
	s_cbranch_vccnz BB0_26                                     // 000000001160: BF870125
	s_cmp_eq_u32 s2, 0                                         // 000000001164: BF068002
	s_mov_b32 s2, 0                                            // 000000001168: BE820080
	s_cbranch_scc1 BB0_14                                      // 00000000116C: BF850076
	s_add_i32 s4, s1, -1                                       // 000000001170: 8104C101
	s_cmp_lt_u32 s4, 7                                         // 000000001174: BF0A8704
	s_cbranch_scc1 BB0_15                                      // 000000001178: BF850075
	v_mov_b32_e32 v6, 0                                        // 00000000117C: 7E0C0280
	s_and_b32 s2, s1, -8                                       // 000000001180: 8602C801
	s_lshl_b32 s4, s1, 3                                       // 000000001184: 8E048301
	s_lshl_b32 s5, s1, 1                                       // 000000001188: 8E058101
	s_mul_i32 s6, s1, 3                                        // 00000000118C: 92068301
	s_lshl_b32 s7, s1, 2                                       // 000000001190: 8E078201
	s_mul_i32 s10, s1, 5                                       // 000000001194: 920A8501
	s_mul_i32 s11, s1, 6                                       // 000000001198: 920B8601
	s_mul_i32 s14, s1, 7                                       // 00000000119C: 920E8701
	v_lshlrev_b32_e32 v4, 2, v3                                // 0000000011A0: 24080682
	s_mov_b32 s15, 0                                           // 0000000011A4: BE8F0080
	v_mov_b32_e32 v5, v0                                       // 0000000011A8: 7E0A0300
	v_mov_b32_e32 v2, v6                                       // 0000000011AC: 7E040306

00000000000011b0 <BB0_12>:
	v_lshlrev_b64 v[7:8], 2, v[5:6]                            // 0000000011B0: D28F0007 00020A82
	v_add_u32_e32 v9, vcc, s1, v5                              // 0000000011B8: 32120A01
	v_mov_b32_e32 v10, v6                                      // 0000000011BC: 7E140306
	v_add_u32_e32 v11, vcc, s5, v5                             // 0000000011C0: 32160A05
	v_add_u32_e32 v13, vcc, s6, v5                             // 0000000011C4: 321A0A06
	v_add_u32_e32 v15, vcc, s7, v5                             // 0000000011C8: 321E0A07
	v_add_u32_e32 v17, vcc, s10, v5                            // 0000000011CC: 32220A0A
	v_mov_b32_e32 v19, s19                                     // 0000000011D0: 7E260213
	v_add_u32_e32 v7, vcc, s18, v7                             // 0000000011D4: 320E0E12
	v_lshlrev_b64 v[9:10], 2, v[9:10]                          // 0000000011D8: D28F0009 00021282
	v_mov_b32_e32 v12, v6                                      // 0000000011E0: 7E180306
	v_addc_u32_e32 v8, vcc, v19, v8, vcc                       // 0000000011E4: 38101113
	v_mov_b32_e32 v20, s19                                     // 0000000011E8: 7E280213
	v_add_u32_e32 v9, vcc, s18, v9                             // 0000000011EC: 32121212
	v_lshlrev_b64 v[11:12], 2, v[11:12]                        // 0000000011F0: D28F000B 00021682
	v_mov_b32_e32 v14, v6                                      // 0000000011F8: 7E1C0306
	v_addc_u32_e32 v10, vcc, v20, v10, vcc                     // 0000000011FC: 38141514
	v_add_u32_e32 v19, vcc, s11, v5                            // 000000001200: 32260A0B
	v_mov_b32_e32 v21, s19                                     // 000000001204: 7E2A0213
	v_add_u32_e32 v11, vcc, s18, v11                           // 000000001208: 32161612
	v_lshlrev_b64 v[13:14], 2, v[13:14]                        // 00000000120C: D28F000D 00021A82
	v_mov_b32_e32 v16, v6                                      // 000000001214: 7E200306
	v_addc_u32_e32 v12, vcc, v21, v12, vcc                     // 000000001218: 38181915
	v_mov_b32_e32 v22, s19                                     // 00000000121C: 7E2C0213
	v_add_u32_e32 v13, vcc, s18, v13                           // 000000001220: 321A1A12
	v_lshlrev_b64 v[15:16], 2, v[15:16]                        // 000000001224: D28F000F 00021E82
	v_addc_u32_e32 v14, vcc, v22, v14, vcc                     // 00000000122C: 381C1D16
	v_mov_b32_e32 v18, v6                                      // 000000001230: 7E240306
	v_mov_b32_e32 v23, s19                                     // 000000001234: 7E2E0213
	v_add_u32_e32 v15, vcc, s18, v15                           // 000000001238: 321E1E12
	v_lshlrev_b64 v[17:18], 2, v[17:18]                        // 00000000123C: D28F0011 00022282
	v_mov_b32_e32 v20, v6                                      // 000000001244: 7E280306
	v_addc_u32_e32 v16, vcc, v23, v16, vcc                     // 000000001248: 38202117
	v_add_u32_e32 v21, vcc, s14, v5                            // 00000000124C: 322A0A0E
	v_mov_b32_e32 v24, s19                                     // 000000001250: 7E300213
	v_add_u32_e32 v17, vcc, s18, v17                           // 000000001254: 32222212
	v_lshlrev_b64 v[19:20], 2, v[19:20]                        // 000000001258: D28F0013 00022682
	v_mov_b32_e32 v22, v6                                      // 000000001260: 7E2C0306
	v_addc_u32_e32 v18, vcc, v24, v18, vcc                     // 000000001264: 38242518
	v_mov_b32_e32 v25, s19                                     // 000000001268: 7E320213
	v_add_u32_e32 v19, vcc, s18, v19                           // 00000000126C: 32262612
	v_lshlrev_b64 v[21:22], 2, v[21:22]                        // 000000001270: D28F0015 00022A82
	v_addc_u32_e32 v20, vcc, v25, v20, vcc                     // 000000001278: 38282919
	v_add_u32_e32 v21, vcc, s18, v21                           // 00000000127C: 322A2A12
	v_addc_u32_e32 v22, vcc, v23, v22, vcc                     // 000000001280: 382C2D17
	flat_load_dword v23, v[7:8]                                // 000000001284: DC500000 17000007
	flat_load_dword v24, v[9:10]                               // 00000000128C: DC500000 18000009
	flat_load_dword v25, v[11:12]                              // 000000001294: DC500000 1900000B
	flat_load_dword v26, v[13:14]                              // 00000000129C: DC500000 1A00000D
	flat_load_dword v15, v[15:16]                              // 0000000012A4: DC500000 0F00000F
	flat_load_dword v16, v[17:18]                              // 0000000012AC: DC500000 10000011
	flat_load_dword v17, v[19:20]                              // 0000000012B4: DC500000 11000013
	flat_load_dword v18, v[21:22]                              // 0000000012BC: DC500000 12000015
	ds_read2_b32 v[7:8], v4 offset0:6 offset1:7                // 0000000012C4: D86E0706 07000004
	ds_read2_b32 v[9:10], v4 offset0:4 offset1:5               // 0000000012CC: D86E0504 09000004
	ds_read2_b32 v[11:12], v4 offset0:2 offset1:3              // 0000000012D4: D86E0302 0B000004
	ds_read2_b32 v[13:14], v4 offset1:1                        // 0000000012DC: D86E0100 0D000004
	s_add_i32 s15, s15, 8                                      // 0000000012E4: 810F880F
	v_add_u32_e32 v5, vcc, s4, v5                              // 0000000012E8: 320A0A04
	v_add_u32_e32 v4, vcc, 32, v4                              // 0000000012EC: 320808A0
	s_cmp_eq_u32 s2, s15                                       // 0000000012F0: BF060F02
	s_waitcnt vmcnt(7) lgkmcnt(0)                              // 0000000012F4: BF8C0077
	v_mac_f32_e32 v2, v13, v23                                 // 0000000012F8: 2C042F0D
	s_waitcnt vmcnt(6)                                         // 0000000012FC: BF8C0F76
	v_mac_f32_e32 v2, v14, v24                                 // 000000001300: 2C04310E
	s_waitcnt vmcnt(5)                                         // 000000001304: BF8C0F75
	v_mac_f32_e32 v2, v11, v25                                 // 000000001308: 2C04330B
	s_waitcnt vmcnt(4)                                         // 00000000130C: BF8C0F74
	v_mac_f32_e32 v2, v12, v26                                 // 000000001310: 2C04350C
	s_waitcnt vmcnt(3)                                         // 000000001314: BF8C0F73
	v_mac_f32_e32 v2, v9, v15                                  // 000000001318: 2C041F09
	s_waitcnt vmcnt(2)                                         // 00000000131C: BF8C0F72
	v_mac_f32_e32 v2, v10, v16                                 // 000000001320: 2C04210A
	s_waitcnt vmcnt(1)                                         // 000000001324: BF8C0F71
	v_mac_f32_e32 v2, v7, v17                                  // 000000001328: 2C042307
	s_waitcnt vmcnt(0)                                         // 00000000132C: BF8C0F70
	v_mac_f32_e32 v2, v8, v18                                  // 000000001330: 2C042508
	s_cbranch_scc0 BB0_12                                      // 000000001334: BF84FF9E
	s_and_b32 s4, s1, 7                                        // 000000001338: 86048701
	s_cmp_eq_u32 s4, 0                                         // 00000000133C: BF068004
	s_cbranch_scc0 BB0_16                                      // 000000001340: BF840007
	s_branch BB0_18                                            // 000000001344: BF82001B

0000000000001348 <BB0_14>:
	s_cbranch_execnz BB0_19                                    // 000000001348: BF89001B
	s_branch BB0_26                                            // 00000000134C: BF8200AA

0000000000001350 <BB0_15>:
	v_mov_b32_e32 v2, 0                                        // 000000001350: 7E040280
	s_and_b32 s4, s1, 7                                        // 000000001354: 86048701
	s_cmp_eq_u32 s4, 0                                         // 000000001358: BF068004
	s_cbranch_scc1 BB0_18                                      // 00000000135C: BF850015

0000000000001360 <BB0_16>:
	s_mul_i32 s5, s2, s1                                       // 000000001360: 92050102
	v_add_u32_e32 v5, vcc, s2, v3                              // 000000001364: 320A0602
	v_lshlrev_b32_e32 v6, 2, v5                                // 000000001368: 240C0A82
	v_add_u32_e32 v4, vcc, s5, v0                              // 00000000136C: 32080005
	v_mov_b32_e32 v5, 0                                        // 000000001370: 7E0A0280

0000000000001374 <BB0_17>:
	v_lshlrev_b64 v[7:8], 2, v[4:5]                            // 000000001374: D28F0007 00020882
	v_mov_b32_e32 v9, s19                                      // 00000000137C: 7E120213
	v_add_u32_e32 v7, vcc, s18, v7                             // 000000001380: 320E0E12
	v_addc_u32_e32 v8, vcc, v9, v8, vcc                        // 000000001384: 38101109
	flat_load_dword v7, v[7:8]                                 // 000000001388: DC500000 07000007
	ds_read_b32 v8, v6                                         // 000000001390: D86C0000 08000006
	s_add_i32 s4, s4, -1                                       // 000000001398: 8104C104
	v_add_u32_e32 v4, vcc, s1, v4                              // 00000000139C: 32080801
	v_add_u32_e32 v6, vcc, 4, v6                               // 0000000013A0: 320C0C84
	s_cmp_lg_u32 s4, 0                                         // 0000000013A4: BF078004
	s_waitcnt vmcnt(0) lgkmcnt(0)                              // 0000000013A8: BF8C0070
	v_mac_f32_e32 v2, v8, v7                                   // 0000000013AC: 2C040F08
	s_cbranch_scc1 BB0_17                                      // 0000000013B0: BF85FFF0

00000000000013b4 <BB0_18>:
	s_branch BB0_26                                            // 0000000013B4: BF820090

00000000000013b8 <BB0_19>:
	s_add_i32 s2, s1, -1                                       // 0000000013B8: 8102C101
	s_cmp_lt_u32 s2, 7                                         // 0000000013BC: BF0A8702
	s_cbranch_scc1 BB0_23                                      // 0000000013C0: BF850073
	v_mov_b32_e32 v6, 0                                        // 0000000013C4: 7E0C0280
	s_and_b32 s2, s1, -8                                       // 0000000013C8: 8602C801
	s_lshl_b32 s4, s1, 3                                       // 0000000013CC: 8E048301
	s_lshl_b32 s5, s1, 1                                       // 0000000013D0: 8E058101
	s_mul_i32 s6, s1, 3                                        // 0000000013D4: 92068301
	s_lshl_b32 s7, s1, 2                                       // 0000000013D8: 8E078201
	s_mul_i32 s10, s1, 5                                       // 0000000013DC: 920A8501
	s_mul_i32 s11, s1, 6                                       // 0000000013E0: 920B8601
	s_mul_i32 s14, s1, 7                                       // 0000000013E4: 920E8701
	v_lshlrev_b32_e32 v4, 2, v3                                // 0000000013E8: 24080682
	s_mov_b32 s15, 0                                           // 0000000013EC: BE8F0080
	v_mov_b32_e32 v5, v0                                       // 0000000013F0: 7E0A0300
	v_mov_b32_e32 v2, v6                                       // 0000000013F4: 7E040306

00000000000013f8 <BB0_21>:
	s_branch 163                                               // 0000000013F8: BF8200A3 <BB0_26+0x90>
	v_cndmask_b32_e32 v1, 2, v5, vcc                           // 0000000013FC: 00020A82
	v_add_u32_e32 v9, vcc, s1, v5                              // 000000001400: 32120A01
	v_mov_b32_e32 v10, v6                                      // 000000001404: 7E140306
	v_add_u32_e32 v11, vcc, s5, v5                             // 000000001408: 32160A05
	v_add_u32_e32 v13, vcc, s6, v5                             // 00000000140C: 321A0A06
	v_add_u32_e32 v15, vcc, s7, v5                             // 000000001410: 321E0A07
	v_add_u32_e32 v17, vcc, s10, v5                            // 000000001414: 32220A0A
	v_mov_b32_e32 v19, s17                                     // 000000001418: 7E260211
	v_add_u32_e32 v7, vcc, s16, v7                             // 00000000141C: 320E0E10
	v_lshlrev_b64 v[9:10], 2, v[9:10]                          // 000000001420: D28F0009 00021282
	v_mov_b32_e32 v12, v6                                      // 000000001428: 7E180306
	v_addc_u32_e32 v8, vcc, v19, v8, vcc                       // 00000000142C: 38101113
	v_mov_b32_e32 v20, s17                                     // 000000001430: 7E280211
	v_add_u32_e32 v9, vcc, s16, v9                             // 000000001434: 32121210
	v_lshlrev_b64 v[11:12], 2, v[11:12]                        // 000000001438: D28F000B 00021682
	v_mov_b32_e32 v14, v6                                      // 000000001440: 7E1C0306
	v_addc_u32_e32 v10, vcc, v20, v10, vcc                     // 000000001444: 38141514
	v_add_u32_e32 v19, vcc, s11, v5                            // 000000001448: 32260A0B
	v_mov_b32_e32 v21, s17                                     // 00000000144C: 7E2A0211
	v_add_u32_e32 v11, vcc, s16, v11                           // 000000001450: 32161610
	v_lshlrev_b64 v[13:14], 2, v[13:14]                        // 000000001454: D28F000D 00021A82
	v_mov_b32_e32 v16, v6                                      // 00000000145C: 7E200306
	v_addc_u32_e32 v12, vcc, v21, v12, vcc                     // 000000001460: 38181915
	v_mov_b32_e32 v22, s17                                     // 000000001464: 7E2C0211
	v_add_u32_e32 v13, vcc, s16, v13                           // 000000001468: 321A1A10
	v_lshlrev_b64 v[15:16], 2, v[15:16]                        // 00000000146C: D28F000F 00021E82
	v_addc_u32_e32 v14, vcc, v22, v14, vcc                     // 000000001474: 381C1D16
	v_mov_b32_e32 v18, v6                                      // 000000001478: 7E240306
	v_mov_b32_e32 v23, s17                                     // 00000000147C: 7E2E0211
	v_add_u32_e32 v15, vcc, s16, v15                           // 000000001480: 321E1E10
	v_lshlrev_b64 v[17:18], 2, v[17:18]                        // 000000001484: D28F0011 00022282
	v_mov_b32_e32 v20, v6                                      // 00000000148C: 7E280306
	v_addc_u32_e32 v16, vcc, v23, v16, vcc                     // 000000001490: 38202117
	v_add_u32_e32 v21, vcc, s14, v5                            // 000000001494: 322A0A0E
	v_mov_b32_e32 v24, s17                                     // 000000001498: 7E300211
	v_add_u32_e32 v17, vcc, s16, v17                           // 00000000149C: 32222210
	v_lshlrev_b64 v[19:20], 2, v[19:20]                        // 0000000014A0: D28F0013 00022682
	v_mov_b32_e32 v22, v6                                      // 0000000014A8: 7E2C0306
	v_addc_u32_e32 v18, vcc, v24, v18, vcc                     // 0000000014AC: 38242518
	v_mov_b32_e32 v25, s17                                     // 0000000014B0: 7E320211
	v_add_u32_e32 v19, vcc, s16, v19                           // 0000000014B4: 32262610
	v_lshlrev_b64 v[21:22], 2, v[21:22]                        // 0000000014B8: D28F0015 00022A82
	v_addc_u32_e32 v20, vcc, v25, v20, vcc                     // 0000000014C0: 38282919
	v_add_u32_e32 v21, vcc, s16, v21                           // 0000000014C4: 322A2A10
	v_addc_u32_e32 v22, vcc, v23, v22, vcc                     // 0000000014C8: 382C2D17
	flat_load_dword v23, v[7:8]                                // 0000000014CC: DC500000 17000007
	flat_load_dword v24, v[9:10]                               // 0000000014D4: DC500000 18000009
	flat_load_dword v25, v[11:12]                              // 0000000014DC: DC500000 1900000B
	flat_load_dword v26, v[13:14]                              // 0000000014E4: DC500000 1A00000D
	flat_load_dword v15, v[15:16]                              // 0000000014EC: DC500000 0F00000F
	flat_load_dword v16, v[17:18]                              // 0000000014F4: DC500000 10000011
	flat_load_dword v17, v[19:20]                              // 0000000014FC: DC500000 11000013
	flat_load_dword v18, v[21:22]                              // 000000001504: DC500000 12000015
	ds_read2_b32 v[7:8], v4 offset0:6 offset1:7                // 00000000150C: D86E0706 07000004
	ds_read2_b32 v[9:10], v4 offset0:4 offset1:5               // 000000001514: D86E0504 09000004
	ds_read2_b32 v[11:12], v4 offset0:2 offset1:3              // 00000000151C: D86E0302 0B000004
	ds_read2_b32 v[13:14], v4 offset1:1                        // 000000001524: D86E0100 0D000004
	s_add_i32 s15, s15, 8                                      // 00000000152C: 810F880F
	v_add_u32_e32 v5, vcc, s4, v5                              // 000000001530: 320A0A04
	v_add_u32_e32 v4, vcc, 32, v4                              // 000000001534: 320808A0
	s_cmp_eq_u32 s2, s15                                       // 000000001538: BF060F02
	s_waitcnt vmcnt(7) lgkmcnt(0)                              // 00000000153C: BF8C0077
	v_mac_f32_e32 v2, v13, v23                                 // 000000001540: 2C042F0D
	s_waitcnt vmcnt(6)                                         // 000000001544: BF8C0F76
	v_mac_f32_e32 v2, v14, v24                                 // 000000001548: 2C04310E
	s_waitcnt vmcnt(5)                                         // 00000000154C: BF8C0F75
	v_mac_f32_e32 v2, v11, v25                                 // 000000001550: 2C04330B
	s_waitcnt vmcnt(4)                                         // 000000001554: BF8C0F74
	v_mac_f32_e32 v2, v12, v26                                 // 000000001558: 2C04350C
	s_waitcnt vmcnt(3)                                         // 00000000155C: BF8C0F73
	v_mac_f32_e32 v2, v9, v15                                  // 000000001560: 2C041F09
	s_waitcnt vmcnt(2)                                         // 000000001564: BF8C0F72
	v_mac_f32_e32 v2, v10, v16                                 // 000000001568: 2C04210A
	s_waitcnt vmcnt(1)                                         // 00000000156C: BF8C0F71
	v_mac_f32_e32 v2, v7, v17                                  // 000000001570: 2C042307
	s_waitcnt vmcnt(0)                                         // 000000001574: BF8C0F70
	v_mac_f32_e32 v2, v8, v18                                  // 000000001578: 2C042508
	s_cbranch_scc0 BB0_21                                      // 00000000157C: BF84FF9E
	s_and_b32 s4, s1, 7                                        // 000000001580: 86048701
	s_cmp_eq_u32 s4, 0                                         // 000000001584: BF068004
	s_cbranch_scc0 BB0_24                                      // 000000001588: BF840006
	s_branch BB0_26                                            // 00000000158C: BF82001A

0000000000001590 <BB0_23>:
	s_mov_b32 s2, 0                                            // 000000001590: BE820080
	v_mov_b32_e32 v2, 0                                        // 000000001594: 7E040280
	s_and_b32 s4, s1, 7                                        // 000000001598: 86048701
	s_cmp_eq_u32 s4, 0                                         // 00000000159C: BF068004
	s_cbranch_scc1 BB0_26                                      // 0000000015A0: BF850015

00000000000015a4 <BB0_24>:
	v_add_u32_e32 v3, vcc, s2, v3                              // 0000000015A4: 32060602
	s_mul_i32 s5, s2, s1                                       // 0000000015A8: 92050102
	v_add_u32_e32 v4, vcc, s5, v0                              // 0000000015AC: 32080005
	v_lshlrev_b32_e32 v3, 2, v3                                // 0000000015B0: 24060682
	v_mov_b32_e32 v5, 0                                        // 0000000015B4: 7E0A0280

00000000000015b8 <BB0_25>:
	v_lshlrev_b64 v[6:7], 2, v[4:5]                            // 0000000015B8: D28F0006 00020882
	v_mov_b32_e32 v8, s17                                      // 0000000015C0: 7E100211
	v_add_u32_e32 v6, vcc, s16, v6                             // 0000000015C4: 320C0C10
	v_addc_u32_e32 v7, vcc, v8, v7, vcc                        // 0000000015C8: 380E0F08
	flat_load_dword v6, v[6:7]                                 // 0000000015CC: DC500000 06000006
	ds_read_b32 v7, v3                                         // 0000000015D4: D86C0000 07000003
	s_add_i32 s4, s4, -1                                       // 0000000015DC: 8104C104
	v_add_u32_e32 v4, vcc, s1, v4                              // 0000000015E0: 32080801
	v_add_u32_e32 v3, vcc, 4, v3                               // 0000000015E4: 32060684
	s_cmp_eq_u32 s4, 0                                         // 0000000015E8: BF068004
	s_waitcnt vmcnt(0) lgkmcnt(0)                              // 0000000015EC: BF8C0070
	v_mac_f32_e32 v2, v7, v6                                   // 0000000015F0: 2C040D07
	s_cbranch_scc0 BB0_25                                      // 0000000015F4: BF84FFF0

00000000000015f8 <BB0_26>:
	s_lshr_b32 s1, s3, 16                                      // 0000000015F8: 8F019003
	s_mul_i32 s9, s9, s1                                       // 0000000015FC: 92090109
	v_add_u32_e32 v1, vcc, s9, v1                              // 000000001600: 32020209
	v_mul_lo_u32 v1, v1, s0                                    // 000000001604: D2850001 00000101
	s_and_b32 s2, s3, 0xffff                                   // 00000000160C: 8602FF03 0000FFFF
	s_mul_i32 s8, s8, s2                                       // 000000001614: 92080208
	v_add_u32_e32 v0, vcc, s8, v0                              // 000000001618: 32000008
	v_add_u32_e32 v0, vcc, v0, v1                              // 00000000161C: 32000300
	v_mov_b32_e32 v1, 0                                        // 000000001620: 7E020280
	v_lshlrev_b64 v[0:1], 2, v[0:1]                            // 000000001624: D28F0000 00020082
	v_mov_b32_e32 v3, s13                                      // 00000000162C: 7E06020D
	v_add_u32_e32 v0, vcc, s12, v0                             // 000000001630: 3200000C
	v_addc_u32_e32 v1, vcc, v3, v1, vcc                        // 000000001634: 38020303
	flat_store_dword v[0:1], v2                                // 000000001638: DC700000 00000200
	s_waitcnt vmcnt(0) lgkmcnt(0)                              // 000000001640: BF8C0070
	s_barrier                                                  // 000000001644: BF8A0000
	s_branch 126                                               // 000000001648: BF82007E <BB0_26+0x24c>
	s_endpgm                                                   // 00000000164C: BF810000
	s_load_dwordx8 s[12:19], s[6:7], 0x0                       // 000000001650: C00E0303 00000000
	s_load_dwordx4 s[0:3], s[6:7], 0x20                        // 000000001658: C00A0003 00000020
	v_mov_b32_e32 v3, 0                                        // 000000001660: 7E060280
	v_mov_b32_e32 v2, 0                                        // 000000001664: 7E040280
	v_mov_b32_e32 v4, 0                                        // 000000001668: 7E080280
	s_waitcnt lgkmcnt(0)                                       // 00000000166C: BF8C007F
	s_mov_b64 s[26:27], src_scc                                // 000000001670: BE9A01FD
	s_waitcnt lgkmcnt(0)                                       // 000000001674: BF8C007F
	s_mov_b64 s[20:21], s[12:13]                               // 000000001678: BE94010C
	s_mov_b64 s[28:29], 0                                      // 00000000167C: BE9C0180
	s_and_b32 s26, s26, s26                                    // 000000001680: 861A1A1A
	s_branch 65126                                             // 000000001684: BF82FE66 <_Z9DCTKernelPfS_S_S_jjj$local+0x20>
	s_mov_b64 s[26:27], src_scc                                // 000000001688: BE9A01FD
	s_memtime s[22:23]                                         // 00000000168C: C0900580 00000000
	s_and_b32 s26, s26, s26                                    // 000000001694: 861A1A1A
	v_lshlrev_b64 v[7:8], 2, v[5:6]                            // 000000001698: D28F0007 00020A82
	v_add_u32_e32 v9, vcc, s1, v5                              // 0000000016A0: 32120A01
	v_mov_b32_e32 v10, v6                                      // 0000000016A4: 7E140306
	v_add_u32_e32 v11, vcc, s5, v5                             // 0000000016A8: 32160A05
	v_add_u32_e32 v13, vcc, s6, v5                             // 0000000016AC: 321A0A06
	v_add_u32_e32 v15, vcc, s7, v5                             // 0000000016B0: 321E0A07
	v_add_u32_e32 v17, vcc, s10, v5                            // 0000000016B4: 32220A0A
	v_mov_b32_e32 v19, s17                                     // 0000000016B8: 7E260211
	v_add_u32_e32 v7, vcc, s16, v7                             // 0000000016BC: 320E0E10
	v_lshlrev_b64 v[9:10], 2, v[9:10]                          // 0000000016C0: D28F0009 00021282
	v_mov_b32_e32 v12, v6                                      // 0000000016C8: 7E180306
	v_addc_u32_e32 v8, vcc, v19, v8, vcc                       // 0000000016CC: 38101113
	v_mov_b32_e32 v20, s17                                     // 0000000016D0: 7E280211
	v_add_u32_e32 v9, vcc, s16, v9                             // 0000000016D4: 32121210
	v_lshlrev_b64 v[11:12], 2, v[11:12]                        // 0000000016D8: D28F000B 00021682
	v_mov_b32_e32 v14, v6                                      // 0000000016E0: 7E1C0306
	v_addc_u32_e32 v10, vcc, v20, v10, vcc                     // 0000000016E4: 38141514
	v_add_u32_e32 v19, vcc, s11, v5                            // 0000000016E8: 32260A0B
	v_mov_b32_e32 v21, s17                                     // 0000000016EC: 7E2A0211
	v_add_u32_e32 v11, vcc, s16, v11                           // 0000000016F0: 32161610
	v_lshlrev_b64 v[13:14], 2, v[13:14]                        // 0000000016F4: D28F000D 00021A82
	v_mov_b32_e32 v16, v6                                      // 0000000016FC: 7E200306
	v_addc_u32_e32 v12, vcc, v21, v12, vcc                     // 000000001700: 38181915
	v_mov_b32_e32 v22, s17                                     // 000000001704: 7E2C0211
	v_add_u32_e32 v13, vcc, s16, v13                           // 000000001708: 321A1A10
	v_lshlrev_b64 v[15:16], 2, v[15:16]                        // 00000000170C: D28F000F 00021E82
	v_addc_u32_e32 v14, vcc, v22, v14, vcc                     // 000000001714: 381C1D16
	v_mov_b32_e32 v18, v6                                      // 000000001718: 7E240306
	v_mov_b32_e32 v23, s17                                     // 00000000171C: 7E2E0211
	v_add_u32_e32 v15, vcc, s16, v15                           // 000000001720: 321E1E10
	v_lshlrev_b64 v[17:18], 2, v[17:18]                        // 000000001724: D28F0011 00022282
	v_mov_b32_e32 v20, v6                                      // 00000000172C: 7E280306
	v_addc_u32_e32 v16, vcc, v23, v16, vcc                     // 000000001730: 38202117
	v_add_u32_e32 v21, vcc, s14, v5                            // 000000001734: 322A0A0E
	v_mov_b32_e32 v24, s17                                     // 000000001738: 7E300211
	v_add_u32_e32 v17, vcc, s16, v17                           // 00000000173C: 32222210
	v_lshlrev_b64 v[19:20], 2, v[19:20]                        // 000000001740: D28F0013 00022682
	v_mov_b32_e32 v22, v6                                      // 000000001748: 7E2C0306
	v_addc_u32_e32 v18, vcc, v24, v18, vcc                     // 00000000174C: 38242518
	v_mov_b32_e32 v25, s17                                     // 000000001750: 7E320211
	v_add_u32_e32 v19, vcc, s16, v19                           // 000000001754: 32262610
	v_lshlrev_b64 v[21:22], 2, v[21:22]                        // 000000001758: D28F0015 00022A82
	v_addc_u32_e32 v20, vcc, v25, v20, vcc                     // 000000001760: 38282919
	v_add_u32_e32 v21, vcc, s16, v21                           // 000000001764: 322A2A10
	v_addc_u32_e32 v22, vcc, v23, v22, vcc                     // 000000001768: 382C2D17
	flat_load_dword v23, v[7:8]                                // 00000000176C: DC500000 17000007
	flat_load_dword v24, v[9:10]                               // 000000001774: DC500000 18000009
	flat_load_dword v25, v[11:12]                              // 00000000177C: DC500000 1900000B
	flat_load_dword v26, v[13:14]                              // 000000001784: DC500000 1A00000D
	flat_load_dword v15, v[15:16]                              // 00000000178C: DC500000 0F00000F
	flat_load_dword v16, v[17:18]                              // 000000001794: DC500000 10000011
	flat_load_dword v17, v[19:20]                              // 00000000179C: DC500000 11000013
	flat_load_dword v18, v[21:22]                              // 0000000017A4: DC500000 12000015
	ds_read2_b32 v[7:8], v4 offset0:6 offset1:7                // 0000000017AC: D86E0706 07000004
	ds_read2_b32 v[9:10], v4 offset0:4 offset1:5               // 0000000017B4: D86E0504 09000004
	ds_read2_b32 v[11:12], v4 offset0:2 offset1:3              // 0000000017BC: D86E0302 0B000004
	ds_read2_b32 v[13:14], v4 offset1:1                        // 0000000017C4: D86E0100 0D000004
	s_add_i32 s15, s15, 8                                      // 0000000017CC: 810F880F
	v_add_u32_e32 v5, vcc, s4, v5                              // 0000000017D0: 320A0A04
	v_add_u32_e32 v4, vcc, 32, v4                              // 0000000017D4: 320808A0
	s_cmp_eq_u32 s2, s15                                       // 0000000017D8: BF060F02
	s_waitcnt vmcnt(7) lgkmcnt(0)                              // 0000000017DC: BF8C0077
	v_mac_f32_e32 v2, v13, v23                                 // 0000000017E0: 2C042F0D
	s_waitcnt vmcnt(6)                                         // 0000000017E4: BF8C0F76
	v_mac_f32_e32 v2, v14, v24                                 // 0000000017E8: 2C04310E
	s_waitcnt vmcnt(5)                                         // 0000000017EC: BF8C0F75
	v_mac_f32_e32 v2, v11, v25                                 // 0000000017F0: 2C04330B
	s_waitcnt vmcnt(4)                                         // 0000000017F4: BF8C0F74
	v_mac_f32_e32 v2, v12, v26                                 // 0000000017F8: 2C04350C
	s_waitcnt vmcnt(3)                                         // 0000000017FC: BF8C0F73
	v_mac_f32_e32 v2, v9, v15                                  // 000000001800: 2C041F09
	s_waitcnt vmcnt(2)                                         // 000000001804: BF8C0F72
	v_mac_f32_e32 v2, v10, v16                                 // 000000001808: 2C04210A
	s_waitcnt vmcnt(1)                                         // 00000000180C: BF8C0F71
	v_mac_f32_e32 v2, v7, v17                                  // 000000001810: 2C042307
	s_waitcnt vmcnt(0)                                         // 000000001814: BF8C0F70
	v_mac_f32_e32 v2, v8, v18                                  // 000000001818: 2C042508
	s_mov_b64 s[26:27], src_scc                                // 00000000181C: BE9A01FD
	s_memtime s[24:25]                                         // 000000001820: C0900600 00000000
	s_waitcnt lgkmcnt(0)                                       // 000000001828: BF8C007F
	s_sub_u32 s22, s24, s22                                    // 00000000182C: 80961618
	s_subb_u32 s23, s25, s23                                   // 000000001830: 82971719
	s_add_u32 s28, s28, s22                                    // 000000001834: 801C161C
	s_addc_u32 s29, s29, s23                                   // 000000001838: 821D171D
	s_and_b32 s26, s26, s26                                    // 00000000183C: 861A1A1A
	s_branch 65358                                             // 000000001840: BF82FF4E <BB0_21+0x184>
	s_waitcnt lgkmcnt(0)                                       // 000000001844: BF8C007F
	s_mov_b64 s[26:27], src_scc                                // 000000001848: BE9A01FD
	s_add_u32 s20, 0x3ff8, s20                                 // 00000000184C: 801414FF 00003FF8
	s_addc_u32 s21, 0, s21                                     // 000000001854: 82151580
	s_waitcnt lgkmcnt(0)                                       // 000000001858: BF8C007F
	s_add_u32 s20, 8, s20                                      // 00000000185C: 80141488
	s_addc_u32 s21, 0, s21                                     // 000000001860: 82151580
	v_mov_b32_e32 v6, s20                                      // 000000001864: 7E0C0214
	v_mov_b32_e32 v7, s21                                      // 000000001868: 7E0E0215
	v_mov_b32_e32 v8, s28                                      // 00000000186C: 7E10021C
	v_mov_b32_e32 v9, s29                                      // 000000001870: 7E12021D
	flat_store_dwordx2 v[6:7], v[8:9]                          // 000000001874: DC740000 00000806
	s_and_b32 s26, s26, s26                                    // 00000000187C: 861A1A1A
	s_branch 65394                                             // 000000001880: BF82FF72 <BB0_26+0x54>
		...
